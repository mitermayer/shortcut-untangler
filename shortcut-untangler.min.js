(function(root,factory){if(typeof define==="function"&&define.amd){define("ShortcutUntangler",[],factory)}else{root.ShortcutUntangler=factory()}})(this,function(){"use scrict";var KEY_MODIFIERS=["alt","ctrl","shift"];var MODFIER_KEY_CODES={8:"backspace",9:"tab",10:"return",13:"return",16:"shift",17:"ctrl",18:"alt",19:"pause",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"insert",46:"del",59:";",61:"=",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scroll",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"};var isString=function(match){return typeof match==="string"};var isArray=function(match){return Array.isArray(match)};var hasRequiredArguments=function(required,option){return required.every(function(key){return typeof option[key]!=="undefined"})};var printDebugConsoleMessage=function(shortcut){console.log('Shortcut "'+shortcut.name+'" triggered with key "'+shortcut.key+'"',shortcut)};var getContextPlacementIndex=function(contextArr,newContext){var placementIndex=contextArr.length;var newContextWeight=newContext.weight;var _curContext;for(var i=contextArr.length-1;i>=0;i--){_curContext=contextArr[i];if(newContextWeight===_curContext.weight){placementIndex=i+1;break}else if(newContextWeight<_curContext.weight){placementIndex=i;break}}return placementIndex};var getContextIndex=function(contextArr,contextName){var targetContextIndex=0;var _context;for(var i=0,len=contextArr.length;i<len;i++){_context=contextArr[i];if(_context.name===contextName){targetContextIndex=i;break}}return targetContextIndex};var flattenEnvironment=function(env){var flattenedEnv={};for(var i=env.context.length-1;i>=0;i--){var _context=env.context[i].shortcut;var _shotcut;for(_shortcut in _context){var shortcutInfo=_context[_shortcut];if(flattenedEnv[_shortcut]||shortcutInfo.disabled){continue}flattenedEnv[_shortcut]=shortcutInfo}}return flattenedEnv};var Shortcut={getKeyName:function(key){if(key.indexOf(" ")!==-1){key=key.toLowerCase().split(" ").filter(function(e){return e}).sort().join("+")}return key.toUpperCase()},validate:function(option,shortcutContext){if(shortcutContext[option.key]){throw new Error('Shortcut key "'+option.key+'" is already set on context this context')}if(!option||!hasRequiredArguments(["key","callback"],option)){throw new Error("InvalidArguments")}return true},create:function(option){var shortcut={key:option.key,description:option.description||"Keyboard shortcut handler triggered by key: "+option.key,name:option.name||"Shortcut for: "+option.key,callback:option.callback};Object.defineProperty(shortcut,"toggleDisabledState",{value:function(state){state=typeof state!=="undefined"?state:!this.disabled;if(state){this.disabled=true}else{delete this.disabled}},writable:false,enumerable:false,configurable:false});return shortcut}};var Context={validate:function(option,targetEnvironment){var targetEnvContext=targetEnvironment.context[getContextIndex(targetEnvironment.context,option.name)];if(targetEnvContext&&targetEnvContext.name===option.name){throw new Error('Context name "'+option.name+'" is already set on environment "'+targetEnvironment.name+'"')}if(!option||!hasRequiredArguments(["name"],option)){throw new Error("InvalidArguments")}return true},create:function(option){var context={shortcut:{},name:option.name,weight:option.weight||0};Object.defineProperty(context,"toggleDisabledState",{value:function(state,shortcut){var scut;if(isArray(shortcut)){for(var i=0,len=shortcut.length;i<len;i++){scut=this.shortcut[shortcut[i]];if(typeof scut!=="undefined"){scut.toggleDisabledState(state)}}}else if(isString(shortcut)){scut=this.shortcut[shortcut];if(typeof scut!=="undefined"){scut.toggleDisabledState(state)}}else{for(var shortcutKey in this.shortcut){this.shortcut[shortcutKey].toggleDisabledState(state)}}},writable:false,enumerable:false,configurable:false});return context}};var Environment={validate:function(option,environments){if(environments[option.name]){throw new Error('Environment name "'+option.name+'" is already set')}if(!option||!hasRequiredArguments(["name"],option)){throw new Error("InvalidArguments")}return true},create:function(option){var environment={context:[],name:option.name};Object.defineProperty(environment,"toggleDisabledState",{value:function(state,context,shortcut){var ctx;if(isArray(context)){for(var i=0,len=this.context.length;i<len;i++){ctx=this.context[i];if(context.indexOf(ctx.name)!==-1){ctx.toggleDisabledState(state,shortcut)}}}else if(isString(context)){for(var k=0,klen=this.context.length;k<klen;k++){ctx=this.context[k];if(ctx.name===context){ctx.toggleDisabledState(state,shortcut)}}}else{for(var j=0,jlen=this.context.length;j<jlen;j++){ctx=this.context[j];ctx.toggleDisabledState(state,shortcut)}}},writable:false,enumerable:false,configurable:false});return environment}};return function ShortcutUntangler(option){option=option||{};var defaultEnvironmentName=option.mainEnvironment||"main";var defaultContextName=option.mainContext||"main";var active_environment=defaultEnvironmentName;var debug=false||option.debug;var rootElement=option.rootElement||document.getElementsByTagName("body")[0];var _environments={};var keyHandler=function(){var pressedKeys={};return{getKeys:function(){return Object.keys(pressedKeys).sort().join("+")},keyDown:function(key){pressedKeys[key]=true},keyUp:function(key){delete pressedKeys[key]}}}();this.changeEnvironment=function(environmentName){if(_environments[environmentName]){active_environment=environmentName}};this.debugMode=function(state){debug=typeof state!=="undefined"?state:true};this.toggleDisabledState=function(state,environment,context,shortcut){var env;if(isArray(environment)){for(var i=0,len=environment.length;i<len;i++){env=_environments[environment[i]];if(typeof env!=="undefined"){env.toggleDisabledState(state,context,shortcut)}}}else if(isString(environment)){env=_environments[environment];if(typeof env!=="undefined"){env.toggleDisabledState(state,context,shortcut)}}else{for(env in _environments){_environments[env].toggleDisabledState(state,context,shortcut)}}};this.getActiveEnvironment=function(){return active_environment};this.toJSON=function(match){var ret={};if(isString(match)){ret=typeof _environments[match]!=="undefined"?flattenEnvironment(_environments[match]):ret}else if(isArray(match)){ret=[];for(var i=0,len=match.length;i<len;i++){ret.push(flattenEnvironment(_environments[match[i]]))}}else if(match===true){ret=[];for(var env in _environments){ret.push(flattenEnvironment(_environments[env]))}}else{ret=flattenEnvironment(_environments[active_environment])}return ret};this.createContext=function(option,environment){var targetEnvironment=_environments[environment]||_environments[this.getActiveEnvironment()];var newContext;var contextArr;Context.validate(option,targetEnvironment);contextArr=targetEnvironment.context;newContext=Context.create(option);contextArr.splice(getContextPlacementIndex(contextArr,newContext),0,newContext)};this.createEnvironment=function(option,targetBaseEnv){var newEnv;var rootEnv=typeof targetBaseEnv!=="undefined"?targetBaseEnv:defaultEnvironmentName;Environment.validate(option,_environments);newEnv=Environment.create(option);_environments[option.name]=newEnv;this.createContext({name:defaultContextName},option.name);if(rootEnv!==false){newEnv.context[0].shortcut=this.toJSON(rootEnv)}};this.createShortcut=function(option,contextName){var activeEnvironment=_environments[this.getActiveEnvironment()];var targetContextIndex=getContextIndex(activeEnvironment.context,contextName);var shortcutContext=activeEnvironment.context[targetContextIndex].shortcut;option.key=Shortcut.getKeyName(option.key);Shortcut.validate(option,shortcutContext);shortcutContext[option.key]=Shortcut.create(option)};this.createEnvironment({name:active_environment});rootElement.addEventListener("keyup",function(e){var key=e.keyCode?e.keyCode:e.which;var shortcutKey=typeof MODFIER_KEY_CODES[key]!=="undefined"?MODFIER_KEY_CODES[key].toUpperCase():String.fromCharCode(key);for(var k=0,len=KEY_MODIFIERS.length;k<len;k++){var keymod=KEY_MODIFIERS[k];if(!event[keymod+"Key"]){keyHandler.keyUp(keymod.toUpperCase())}}keyHandler.keyUp(shortcutKey)},false);rootElement.addEventListener("keydown",function(e){var key=e.keyCode?e.keyCode:e.which;var shortcutKey=typeof MODFIER_KEY_CODES[key]!=="undefined"?MODFIER_KEY_CODES[key].toUpperCase():String.fromCharCode(key);var activeEnvironment=_environments[active_environment];var shortcut;keyHandler.keyDown(shortcutKey);if(KEY_MODIFIERS.indexOf(shortcutKey.toLowerCase())===-1){for(var k=0,len=KEY_MODIFIERS.length;k<len;k++){var keymod=KEY_MODIFIERS[k];if(event[keymod+"Key"]){keyHandler.keyDown(keymod.toUpperCase())}}}shortcut=keyHandler.getKeys();for(var i=activeEnvironment.context.length-1;i>=0;i--){var _shortcut=activeEnvironment.context[i].shortcut[shortcut];if(_shortcut&&!_shortcut.disabled){if(debug){printDebugConsoleMessage(_shortcut)}_shortcut.callback(e,arguments);break}}},false)}});